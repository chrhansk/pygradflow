[tool.poetry]
name = "pygradflow"
version = "0.5.23"
description = "PyGradFlow is a simple implementation of the sequential homotopy method to be used to solve general nonlinear programs."
authors = ["Christoph Hansknecht <christoph.hansknecht@tu-clausthal.de>"]
readme = "README.md"
repository = "https://github.com/chrhansk/pygradflow"
documentation = "https://pygradflow.readthedocs.io"


[tool.poetry.dependencies]
python = ">=3.10,<4.0"
scipy = ">=1.14"
matplotlib = ">=3.7.0"
termcolor = ">=2.3.0"
numpy = ">=2.0"
pyyaml = ">=6.0.0"
cyipopt = ">=1.4.1"

[tool.poetry.group.solvers.dependencies]
pyomo = "^6.7.3"
pymumps = ">=0.3.2"
pyspral = ">=0.1.0"
scikit-sparse = "^0.4.13"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.0"
isort = ">=5.0"
black = ">=20.0"
mypy = ">=1.7"
types-pyyaml = ">=6.0"
pytest-timeout = ">=2.0"
pyflakes = ">=3.0"
mpspy = ">=0.1.4"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"

[tool.poetry.group.bench]
optional = true

[tool.poetry.group.bench.dependencies]
pyqplib = ">=0.1.5"
pycutest = "^1.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
plugins = [
  "numpy.typing.mypy_plugin",
]
